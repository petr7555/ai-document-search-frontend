{
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "plugins": [
    "unused-imports",
    "simple-import-sort",
    "react",
    "react-hooks",
    "import",
    "@typescript-eslint"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "parser": "@typescript-eslint/parser",
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint"],
      "extends": [
        "plugin:import/typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "@typescript-eslint/interface-name-prefix": ["off"],
        "@typescript-eslint/no-unused-vars": ["warn"],
        "@typescript-eslint/triple-slash-reference": ["off"]
      }
    }
  ],
  "rules": {
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "enableDangerousAutofixThisMayCauseInfiniteLoops": true
      }
    ],
    "@typescript-eslint/no-redeclare": "off",
    "import/no-anonymous-default-export": "off",
    "jsx-quotes": ["warn", "prefer-double"],
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          [
            // Packages. `react` related packages come first.
            "^react",
            "^@?\\w",
            // Internal packages.
            "^(components|modules|utils)(/.*|$)",
            // Side effect imports.
            "^\\u0000",
            // Parent imports. Put `..` last.
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$",
            // Other relative imports. Put same-folder imports and `.` last.
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$",
            // Style imports.
            "^.+\\.s?css$"
          ]
        ]
      }
    ],
    "import/first": "warn",
    "import/newline-after-import": "warn",
    "import/no-duplicates": "warn",
    // "no-nested-ternary": "error", // uncomment when the improvement takes place
    "no-console": [
      "warn",
      {
        "allow": ["warn", "error"]
      }
    ],
    "@typescript-eslint/no-unused-vars": "warn",
    "unused-imports/no-unused-imports-ts": "warn",
    "unused-imports/no-unused-vars-ts": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "react/no-unused-prop-types": "warn"
  },
  "ignorePatterns": ["node_modules/", "build/"]
}
